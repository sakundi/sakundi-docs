"use strict";(self.webpackChunktikuna=self.webpackChunktikuna||[]).push([[845],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>g});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},y=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),y=a,g=d["".concat(s,".").concat(y)]||d[y]||u[y]||o;return n?r.createElement(g,l(l({ref:t},p),{},{components:n})):r.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=y;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}y.displayName="MDXCreateElement"},1151:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var r=n(8168),a=(n(6540),n(5680));const o={id:"library-installation",title:"Library Installation",sidebar_label:"Library Installation",description:"Library Installation",keywords:["sakundi","blockchain"],hide_table_of_contents:!0,custom_edit_url:null},l="Deploying Iden3 Contracts on BlockDAG testnet",i={unversionedId:"user-section/library-installation",id:"user-section/library-installation",title:"Library Installation",description:"Library Installation",source:"@site/docs/user-section/install-iden3.md",sourceDirName:"user-section",slug:"/user-section/library-installation",permalink:"/docs/user-section/library-installation",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"library-installation",title:"Library Installation",sidebar_label:"Library Installation",description:"Library Installation",keywords:["sakundi","blockchain"],hide_table_of_contents:!0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"Using Zikuani as a provider",permalink:"/docs/user-section/using-zikuani-third-party"},next:{title:"What is ZK Voto Digital?",permalink:"/docs/user-section/what-is-zk-voto-digital"}},s={},c=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"1. Clone the Repository",id:"1-clone-the-repository",level:2},{value:"2. Install Dependencies",id:"2-install-dependencies",level:2},{value:"3. Configure Hardhat for BlockDAG",id:"3-configure-hardhat-for-blockdag",level:2},{value:"4. Then run the deployment scripts:",id:"4-then-run-the-deployment-scripts",level:2},{value:"5. Troubleshooting",id:"5-troubleshooting",level:2},{value:"Replacement Transaction Underpriced",id:"replacement-transaction-underpriced",level:3},{value:"7. Notes",id:"7-notes",level:2},{value:"8. Resources",id:"8-resources",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.yg)(d,(0,r.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"deploying-iden3-contracts-on-blockdag-testnet"},"Deploying Iden3 Contracts on BlockDAG testnet"),(0,a.yg)("p",null,"This guide explains how to install and deploy the ",(0,a.yg)("a",{parentName:"p",href:"https://github.com/iden3/contracts"},"iden3-contracts")," on a BlockDAG EVM-compatible network."),(0,a.yg)("h2",{id:"prerequisites"},"Prerequisites"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"Node.js \u2265 18.x"),(0,a.yg)("li",{parentName:"ul"},"Yarn \u2265 1.22.x or npm"),(0,a.yg)("li",{parentName:"ul"},"A BlockDAG RPC endpoint (e.g. ",(0,a.yg)("a",{parentName:"li",href:"https://test-rpc.primordial.bdagscan.com/"},"https://test-rpc.primordial.bdagscan.com/"),")"),(0,a.yg)("li",{parentName:"ul"},"A funded EVM address on BlockDAG testnet"),(0,a.yg)("li",{parentName:"ul"},"Git")),(0,a.yg)("h2",{id:"1-clone-the-repository"},"1. Clone the Repository"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/iden3/contracts.git iden3-contracts\ncd iden3-contracts\n")),(0,a.yg)("h2",{id:"2-install-dependencies"},"2. Install Dependencies"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"yarn install\n")),(0,a.yg)("p",null,"Or with npm:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-bash"},"npm install\n")),(0,a.yg)("h2",{id:"3-configure-hardhat-for-blockdag"},"3. Configure Hardhat for BlockDAG"),(0,a.yg)("p",null,"Edit or create ",(0,a.yg)("inlineCode",{parentName:"p"},"hardhat.config.ts")," or ",(0,a.yg)("inlineCode",{parentName:"p"},"hardhat.config.js"),", for instance:"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},'import { HardhatUserConfig } from "hardhat/config";\nimport "@nomicfoundation/hardhat-toolbox";\n\nconst config: HardhatUserConfig = {\n  solidity: "0.8.20",\n  networks: {\n    localhost: {\n      url: "http://127.0.0.1:8545",\n      accounts: [privateKey]\n    },\n    amoy: {\n      url: "https://rpc-amoy.polygon.technology/",\n      accounts: [privateKey]\n    },\n    "blockdag-testnet": {\n      chainId: 1043,\n      url: "https://test-rpc.primordial.bdagscan.com/",\n      accounts: [privateKey],\n      gasPrice: 1_000_000_000, // 1 gwei in wei,\n    },\n  }\n};\n\nexport default config;\n')),(0,a.yg)("h2",{id:"4-then-run-the-deployment-scripts"},"4. Then run the deployment scripts:"),(0,a.yg)("ol",null,(0,a.yg)("li",{parentName:"ol"},"Deploy create2AnchorAddress that we use for unified addresses",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"npx hardhat run scripts/deploy/deployCreate2AddressAnchor.ts --network blockdag-testnet\n"))),(0,a.yg)("li",{parentName:"ol"},"Deploy libraries contracts",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"npx hardhat run scripts/deploy/deployLibraries.ts --network blockdag-testnet\n"))),(0,a.yg)("li",{parentName:"ol"},"Deploy State contract",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre",className:"language-shell"},"npx hardhat run scripts/deploy/deployState.ts --network blockdag-testnet\n"))),(0,a.yg)("li",{parentName:"ol"},"Deploy Identity Tree Store contract",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre"},"npx hardhat run scripts/deploy/deployIdentityTreeStore.ts --network blockdag-testnet\n"))),(0,a.yg)("li",{parentName:"ol"},"Deploy Validators contracts",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre"},"npx hardhat run scripts/deploy/deployValidators.ts --network blockdag-testnet\n"))),(0,a.yg)("li",{parentName:"ol"},"Deploy Universal Verifier contract",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre"},"npx hardhat run scripts/deploy/deployUniversalVerifier.ts --network blockdag-testnet\n"))),(0,a.yg)("li",{parentName:"ol"},"Add validators to whitelisted validators in Universal Verifier",(0,a.yg)("pre",{parentName:"li"},(0,a.yg)("code",{parentName:"pre"},"npx hardhat run scripts/maintenance/addValidatorsToUniversalVerifier.ts --network blockdag-testnet\n")))),(0,a.yg)("h2",{id:"5-troubleshooting"},"5. Troubleshooting"),(0,a.yg)("h3",{id:"replacement-transaction-underpriced"},"Replacement Transaction Underpriced"),(0,a.yg)("p",null,"You may need to set a higher ",(0,a.yg)("inlineCode",{parentName:"p"},"gasPrice"),":"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-ts"},"gasPrice: 1000000000 // or higher\n")),(0,a.yg)("h2",{id:"7-notes"},"7. Notes"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},"BlockDAG uses a custom EVM-compatible chain (Chain ID 1043)."),(0,a.yg)("li",{parentName:"ul"},"Most tooling works the same as Ethereum, but some verification features may be unsupported.")),(0,a.yg)("h2",{id:"8-resources"},"8. Resources"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://github.com/iden3/contracts"},"Iden3 Contracts GitHub")),(0,a.yg)("li",{parentName:"ul"},(0,a.yg)("a",{parentName:"li",href:"https://hardhat.org"},"Hardhat Docs"))))}u.isMDXComponent=!0}}]);